version: 0.2

env:
  variables:
    GITHUB_REPO: "github.com/GhassenRabii/Productivity"
    # DJANGO_DB_SECRET_ARN and DJANGO_DB_HOST are injected if you want to fetch them (for makemigrations, not needed)
    # GITHUB_TOKEN is injected securely

phases:
  install:
    commands:
      - echo "Installing dependencies‚Ä¶"
      - apt-get update && apt-get install -y jq
      - pip install --upgrade pip
      - cd $CODEBUILD_SRC_DIR
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo "Initializing Git in source directory‚Ä¶"
      - cd $CODEBUILD_SRC_DIR
      - git init
      - git remote add origin "https://${GITHUB_TOKEN}@${GITHUB_REPO}"
      - git fetch origin main
      - git reset --hard origin/main

  build:
    commands:
      - echo "Generating Django migrations (no database required)‚Ä¶"
      - cd $CODEBUILD_SRC_DIR
      - python manage.py makemigrations --noinput
      - python manage.py makemigrations --check --dry-run
      - echo "‚úÖ Migrations are up to date."

      - |
        NEW=$(git diff --name-only origin/main HEAD -- tasks/migrations)
        if [ -n "$NEW" ]; then
          echo "üõ† New migrations detected:"
          echo "$NEW"
          git config user.email "ci-bot@yourdomain.com"
          git config user.name  "CI Bot"
          git add tasks/migrations
          git commit -m "ci: auto-generate migrations [skip ci]"
          echo "Pushing migrations to GitHub‚Ä¶"
          git push origin HEAD:main || { echo "‚ùå git push failed"; exit 1; }
        else
          echo "‚úÖ No new migrations."
        fi

artifacts:
  files:
    - '**/*'
